#
# Start of Fortigate - Onprem IPSEC VPN Tunnel Configuration
#
//noinspection HILUnresolvedReference
locals {
  externalip = tolist(azurerm_vpn_gateway.microhack-eus2-hub-vng.bgp_settings[0].instance_0_bgp_peering_address[0].tunnel_ips)[1]
  bgppeerip = tolist(azurerm_vpn_gateway.microhack-eus2-hub-vng.bgp_settings[0].instance_0_bgp_peering_address[0].default_ips)[0]
  bgpas = azurerm_vpn_gateway.microhack-eus2-hub-vng.bgp_settings[0].asn
}

resource "fortios_vpnipsec_phase1interface" "VWAN-USE-PH1" {
  interface = "wan1"
  proposal = "aes256-sha256"
  ike_version = "2"
  dhgrp = "14"
  name = "VWAN-USE"
  authmethod = "psk"
  psksecret = var.password
  remote_gw = local.externalip
  keylife = 28800
}
resource "fortios_vpnipsec_phase2interface" "VWAN-USE-PH2" {
  name = "VWAN-USE"
  phase1name = fortios_vpnipsec_phase1interface.VWAN-USE-PH1.name
  proposal = "aes256-sha256"
  dhgrp = "14"
  keylife_type = "seconds"
  keylifeseconds = 3600
  pfs = "enable"

encapsulation = "tunnel-mode"
}
resource "fortios_system_interface" "VWAN-USE" {
name = fortios_vpnipsec_phase2interface.VWAN-USE-PH2.name
description = "VPN Interface between FG wan1 and Azure USE"
type = "tunnel"
vdom = "root"
allowaccess = "ping https ssh http"
ip            = join(" ", [var.vpn_use1_local,var.vpn_cidr30_mask])
remote_ip = join(" ", [var.vpn_use1_remote, var.vpn_cidr30_mask])
tcp_mss = 1400
autogenerated = "auto"
}
resource "fortios_router_bgp" "FORTIGATE-BGP" {
as = var.vpn_use_local_bgpas
router_id = var.fg-mgmt-ip
redistribute {
name = "connected"
status = "enable"
}
}
resource "fortios_routerbgp_neighbor" "VWAN-USE-BGP" {
ip = local.bgppeerip
remote_as = local.bgpas
bfd = "enabled"
activate = "enabled"
interface = fortios_vpnipsec_phase2interface.VWAN-USE-PH2.name
}
resource "fortios_firewall_policy" "VWAN-USE-R1" {
name = "VWAN-USE"
action = "accept"
logtraffic = "all"
schedule   = "always"
srcaddr {
name = "all"
}

dstaddr {
name = "all"
}

srcintf {
name = "internal"
}

dstintf {
name = fortios_vpnipsec_phase1interface.VWAN-USE-PH1.name
}

service {
name = "ALL"
}

}
